---
layout:     post
title:      "linux-从这里开始-常用命令"
subtitle:   " \"linux基础常用命令\""
date:       2023-12-09 16:02:12
author:     "yangsir"
header-img: "img/bg-material.jpg"
catalog: true
tags:
    - 笔记
    - linux学习
    - 云原生

---

> “Yeah It's on. ”


<p id = "build"></p>

## linux常见命令



### 常用查看命令



#### cat

- -n 显示行号
- -A 显示所有的字符

<img src="\img\linux\image-20241120092059996.png" alt="image-20241120092059996" style="zoom:50%;" />

ps:-A参数显示文件中的**不可见字符**，并在每一行末尾标记 `$`，以明确行尾的位置。

#### tac   

- cat的倒序输出

#### rev

- cat的行内倒序输出

#### nl

- 显示行数输出 （无内容行不计数）

#### more/less

- 滚动查看文件内容 （交互式）



### 管道（    |   ）

- 将前面命令的执行结果 交管道后的命令作为参数



### head

- -数字 文件名        查看前...行

### tail

- -数字 文件名       查看后多少行
- -f         动态更新尾部信息

## wc     统计文件中的单词数量

- -l 统计行数 （只显示多少行，不显示内容，所有行都算包括空行）
- -w 统计单词个数（以空格为分界）

### grep      在文件中查找并显示包含包含指定字符串的行

- -i 查找时忽略大小写
- -w 将条件视为完整单词
- -v 反转查找
- -E 正则查找
- “^...” 表示以 .......开头
- “....$” 表示以……结尾

​		eg:   grep -v -E "^$" 查找所有不是空行的行

### diff   用于比较两个文件或者两个文件夹中文件的差异

diff命令的常用选项或参数说明

| 选项 |        描述         |
| :--: | :-----------------: |
|  -i  |   忽略大小写差异    |
|  -w  |    忽略所有空格     |
|  -B  |     忽略空白行      |
|  -y  |    并排比较文件     |
|  -n  | 使用RCS格式进行比较 |
|  -c  | 以C语言风格进行比较 |



### gzip /bzip2     作用都是压缩 不过前者扩展名为gz,后者扩展名为 .bz2

- -q  文件名 指定压缩文件

### tar  制作归档文件

- 归档 tar [c....] 归档文件名 源文件或目录
- 释放 tar [x....] 文件名 [-C 目标目录]
- -v 输出详细信息
- -f 表示使用归档文件 （必须有）
- -t 列表查看包内的文件
- -z 调用gzip

常用命令

tar -zcvf

tar -xzvf

tar tf ……查看、预览

### tar命令实现增量备份

增量备份

优点：每天增加的包体积较小，打包速度较快，占用空间少

缺点：安全性低，恢复文件时，要按照打包时的顺序去恢复

```shell
tar -g 文件名 -zcvf full.tar.gz test/
```

下一次压缩时会先扫描-g后面的文件，这个文件就相当于一个记事本





#### 打包时忽略某些文件

```shell
tar zcf num.tar.gz --exclude -from /tardir/excludefild  
```



### vim使用

- dd 删除当前行
- 100 dd 删除光标向下100行
- :s /old/new 替换第一个（光标所在行）
- :s /old/new/g 替换所有（光标所在行）
- :% s/old/new/g 整个文件内替换
- :2,5 s/old/new/g 2-5行内替换(可以用#d代替/)
- :set nu 显示行号
- u 撤销一次
- 抗出 + r 对使用u命令撤销操作进行恢复

### rpm使用

软件包分三种：

- rpm软件包
- deb软件包（**Debian**常用）
- 源代码软件包

rpm常用命令

- rpm -qa 查看已安装的所有的安装包
- rpm -qi 软件名 查看软件安装信息
- rpm -ql 查看软件安装到了哪里去
- rpm -qp 查看未安装的软件包（软件包已经下载，但未安装）
- rpm -ivh 完整软件包名称   安装软件包   （注意：必须是完整的软件包名称，而且需要解决依赖关系）
- --force 强制安装
- --nodeps 安装、升级或者卸载软件时，忽略依赖关系（安装、升级时慎用，可能造成安装成功但无法使用的情况）

源码包安装：

1、md5sum 软件包名称     进行完整性校验

2、./configure 配置

​	 ./configure --prefix = /usr/local/…… 指定路径生成makefile文件

3、make -j 2 编译（-j 指定两核编译）

4、make install 安装复制二进制文件配置换环境

5、源码包安装的软件，安装到了自定义位置，需要到这个目录下启动

6、netstat -lnpt 检查进程

### 配置本地yum仓库

/etc/yum.repos.d 下有很多.repo文件

![image-20231210135159347](\img\springBoot\image-20231210135159347.png)

其中CentOS-Media.repo是本地仓库

- yum clean all 清除缓存

1. 清理旧的、无用的、过期的包和头文件，释放磁盘空间。
2. 当系统出现包管理错误或者更新错误时，清理缓存可能会解决问题。
3. 当 yum 源更新了，本地缓存的包信息还是旧的，这时候可以使用 "yum clean all" 清理掉旧的包信息，更新为新的包信息。
4. 当安装包出现依赖关系错误时，清理 yum 缓存可能可以解决问题。
5. 当遇到网络问题导致的包下载不完整或者损坏时，清理缓存可以删除这些包，再次下载。

- yum -y remove 卸载
- yum makecache开启缓存
