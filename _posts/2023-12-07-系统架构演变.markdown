---
layout:     post
title:      "系统架构演变"
subtitle:   " \"SpringCloud学习记录\""
date:       2023-12-07 09:48:12
author:     "yangsir"
header-img: "img/bg-material.jpg"
catalog: true
tags:
    - 笔记
    - SpringCloud

---

> “Yeah It's on. ”


<p id = "build"></p>

## 系统架构演变

### 1、集中式架构

当网站流量很小时，只需一个应用，将所有功能都部署在一起，以减少部署节点和成本

#### 优点：

系统开发速度快

维护成本低

适用于开发要求较低的系统

#### 缺点：

代码耦合度高，后期维护困难

无法针对不同模块进行针对性优化

无法水平扩展

单点容错率低，并发能力差

### 2、垂直拆分

当访问量逐渐增大，单一应用无法满足需求，此时为了应对更高的并发和业务要求，我们根据业务对系统进行拆分：

#### 优点:

系统实现了流量分担，解决了并发问题

可以针对不同模块进行优化

方便水平扩展，负载均衡，容错率提高

#### 缺点：

系统间相互独立，会有很多重复开发工作，影响开发效率

### 3、分布式服务

当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求

#### 优点：

将基础服务进行了抽取，系统间相互调用，提高了代码复用和开发效率

#### 缺点：

系统间耦合度变高，调用关系错综复杂，难以维护

### 4、面向服务架构

SOA面向服务的架构：它是一种设计方法，其中包含多个服务，服务之间通过相互依赖最终提供一系列的功能，一个服务通常以独立的形式存在与操作系统进程中，各个服务之间通过网络调用。

#### 缺点：

每个供应商提供的ESB产品有偏差，自身实现较为复杂；应用服务粒度较大，ESB集成整合所有服务和协议、数据转换使得运维、测试部署困难，所有服务都通过一个通路通信，直接降低了通信速度

### 5、微服务架构



下一节再唠
